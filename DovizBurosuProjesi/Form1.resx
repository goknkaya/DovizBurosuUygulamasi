<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>